jIniFileModifier aide à lire et à modifier des fichiers de configuration au format ini. Le constructeur de la classe prend un paramètre : le chemin du fichier ce qui vous oblige à instancier la classe avec le chemin du fichier à lire ou modifier.

L'avantage de cette classe est qu'elle préserve les commentaires et saut de ligne présent dans le fichier, contrairement à la fonction @@parse_ini_file@@ de PHP.

**Attention** : Si vous souhaitez uniquement lire un fichier ini, utilisez la fonction @@parse_ini_file@@, pas @@jIniFileModifier@@. La fonction @@parse_ini_file@@ est en effet largement plus performante que @@jIniFileModifier@@.


===== Constructeur =====

Le constructeur permet de lire le fichier de configuration. Attention, le nom du fichier est en chemin absolu.

<code>
// on ira lire le fichier dans le répertoire /var/config de l'application
$monfichier = jApp::configPath('exemple.ini.php');
$ini = new jIniFileModifier ($monfichier);
</code>

===== Fonction getValue =====

La fonction getValue permet de lire la valeur d'un mot clé avec une section ou pas. La fonction prend les paramètres suivant: le mot clé, la section (optionnel).

Dans le cas le mot clé ne se trouve pas dans une section, ne mettez pas le paramètre section 

<code>
$valeur = $ini->getValue($MotCle, $Section);
</code>

===== Fonction setValue =====

La fonction setValue permet de modifier la valeur d'un mot clé dans une section ou pas. La fonction prend les paramètres suivant : le mot clé, la nouvelle valeur, la section (optionnel)

Dans le cas le mot clé ne se trouve pas dans une section, ne mettez pas le paramètre section 

<code>
$ini->setValue($MotCle, $NewValeur, $Section);
</code>


===== Fonction save =====
La fonction save permet d'enregistrer le fichier après modification

<code>
$ini->save();
</code>

===== Fonction saveAs =====
La fonction save permet d'enregistrer la configuration dans un nouveau fichier (Enregistrer sous)
<code>
$ini->saveAs();
</code>


